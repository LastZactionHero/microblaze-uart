#include <xuartlite_l.h>
#include <xgpio.h>
#include <xintc_l.h>
#include <xuartlite.h>
#include <xparameters.h>

/* uartlite interrupt service routine */
void uart_int_handler(void *baseaddr_p) {
	char c;
	/* till uart FIFOs are empty */
	while (!XUartLite_IsReceiveEmpty(XPAR_AXI_UARTLITE_0_BASEADDR)) {
		/* read a character */
		c = XUartLite_RecvByte(XPAR_AXI_UARTLITE_0_BASEADDR);
		/* print character on hyperterminal (STDOUT) */
		xil_printf ("%c", c);
	}
}

static char * "\r\nhello world!\r\n";

int main(void)
{
	xil_printf("Started\r\n");

	// Write something to GPIO
	XGpio gpio;
	XGpio_Initialize(&gpio, XPAR_AXI_GPIO_0_DEVICE_ID);
	XGpio_SetDataDirection(&gpio, 1, 0xFFFFFFF0);
	XGpio_DiscreteWrite(&gpio, 1, 0x00000005);

	/* Enable MicroBlaze exception */
	microblaze_enable_interrupts();

	/* Connect uart interrupt handler that will be called when an interrupt
	 * for the uart occurs*/
	XIntc_RegisterHandler(
			XPAR_INTC_0_BASEADDR,
			XPAR_MICROBLAZE_0_AXI_INTC_AXI_UARTLITE_0_INTERRUPT_INTR,
			(XInterruptHandler)uart_int_handler,
			(void *)XPAR_AXI_UARTLITE_0_BASEADDR
	);

	// Connect UART 1 interrupt handler
	XIntc_RegisterHandler(
			XPAR_INTC_0_BASEADDR,
			XPAR_MICROBLAZE_0_AXI_INTC_AXI_UARTLITE_1_INTERRUPT_INTR,
			(XInterruptHandler)uart_int_handler,
			(void *)XPAR_AXI_UARTLITE_1_BASEADDR
	);

	/* Start the interrupt controller */
	XIntc_MasterEnable(XPAR_INTC_0_BASEADDR);

	/* Enable uart interrupt in the interrupt controller */
	XIntc_EnableIntr(XPAR_INTC_0_BASEADDR, XPAR_AXI_UARTLITE_0_INTERRUPT_MASK);
	XIntc_EnableIntr(XPAR_INTC_0_BASEADDR, XPAR_AXI_UARTLITE_1_INTERRUPT_MASK);

	/* Enable Uartlite interrupt */
	XUartLite_EnableIntr(XPAR_AXI_UARTLITE_0_BASEADDR);
	XUartLite_EnableIntr(XPAR_AXI_UARTLITE_1_BASEADDR);

	XUartLite_SendByte(XPAR_AXI_UARTLITE_0_BASEADDR, 65);
	XUartLite_SendByte(XPAR_AXI_UARTLITE_0_BASEADDR, 66);
	XUartLite_SendByte(XPAR_AXI_UARTLITE_0_BASEADDR, 67);

	XUartLite_SendByte(XPAR_AXI_UARTLITE_1_BASEADDR, 66);

	XUartLite uart0;
	XUartLite_Initialize(&uart0, XPAR_AXI_UARTLITE_0_DEVICE_ID);

	XUartLite_Send(&uart0, "\r\nhello world!\r\n", 16);


	/* Wait for interrupts to occur */
	while (1);
}
